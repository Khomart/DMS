@model PaginatedList<ContosoUniversity.Models.Student>

@{
    ViewData["Title"] = "Students";
}

<h2>Students</h2>
<br />

@if(User.IsInRole("Admin"))
{
@*<p>
    <a asp-action="Create">Create New</a>
</p>*@
}
<form asp-action="Index" method="get">
    <div class="form-actions no-color">
        <p>
            Find by name: <input type="text" name="SearchString" value="@ViewData["CurrentFilter"]" />
            <input type="submit" value="Search" class="btn btn-default btn" /> |
            <a asp-action="Index">Back to Full List</a>
        </p>
    </div>
</form>

<table class="table">
    <thead>
        <tr>
            <th>
                First Name
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Last Name</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["ProgramSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Program</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["VerifiedSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Verified</a>
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.FirstMidName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.LastName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Program)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Approved)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-page="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled btn">
    Previous
</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-page="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled btn">
    Next
</a> <span style="margin:0 5px 0 10px;">Show by: </span>
<select class="btn btn-default" id="pageSize" name="pageSize" asp-items="@ViewBag.PageSize">
</select>

@section Scripts {
    <script type="text/javascript">
    {
        $(document).ready(function () {
            $("#pageSize").on('change', function(){
                url = "/Students";
                var size = $(this).val();
                window.location.href =  url + "?" + "sortOrder=" + "@ViewData["CurrentSort"]" + "&page=" + "1" + "&currentFilter=" + "@ViewData["CurrentFilter"]" + "&pageSize=" + size;
            })
        });
    }</script>
    }