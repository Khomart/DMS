@model PaginatedList<ContosoUniversity.Models.Entities.Semester>

@{
    ViewData["Title"] = "Index";
}

<h2>Semesters</h2>
<br />
@*<p>
    <a class="btn btn-success createNew" asp-action="Create">Create New</a>
</p>*@
<form asp-action="Index" method="get">
    <div class="form-actions no-color">
        <p>
            Year filter: <input type="text" name="SearchString" value="@ViewData["CurrentFilter"]" />
            <input type="submit" value="Search" class="btn btn-default btn" /> |
            <a asp-action="Index">Back to Full List</a>
        </p>
    </div>
</form>
<table class="table">
    <thead>
        <tr>
            <th>
                Season
            </th>
            <th>
                Year
            </th>
            <th>
                Starts
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model)
{
    if (item.Current)
    {
        <tr class="bg-info">
            <td>
                @Html.DisplayFor(modelItem => item.Season)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.StartYear)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.StartingDate)
            </td>
            <td>
                <a class="btn btn-default" asp-action="Edit" asp-route-id="@item.ID">Edit</a>
            </td>
        </tr>
    }
    else if (item.Open)
    {
        <tr class="bg-success">
            <td>
                @Html.DisplayFor(modelItem => item.Season)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.StartYear)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.StartingDate)
            </td>
            <td>
                <a class="btn btn-default" asp-action="Edit" asp-route-id="@item.ID">Edit</a>
            </td>
        </tr>
    }
    else
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Season)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.StartYear)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.StartingDate)
            </td>
            <td>
                <a class="btn btn-default" asp-action="Edit" asp-route-id="@item.ID">Edit</a>
            </td>
        </tr>
    }
}
    </tbody>
</table>
@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}
    <a asp-action="Index"
       asp-route-page="@(Model.PageIndex - 1)"
       class="btn btn-default @prevDisabled btn">
        Previous
    </a>
    <a asp-action="Index"
        asp-route-page="@(Model.PageIndex + 1)"
        class="btn btn-default @nextDisabled btn">
        Next
    </a>